#!/usr/bin/env python
#
# Copyright (C) 2011 Network Security Services, LLC
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation version 3 of the
# License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# carver.py
# David Windsor <dwindsor@networksecurityservicesllc.com>
#  
# Usage: carver.py [-t <type>] <file>
#

import os
import sys
# Compute absolute path for import purposes
path = os.path.dirname(sys.argv[0])
abspath = os.path.abspath(path)
sys.path.append(abspath + "/../lib")

import carver_lib
import argparse
import plugin
from evt_plugin import EvtPlugin

parser = argparse.ArgumentParser(description="Find forensics data.")
parser.add_argument("files", metavar="files", nargs="*", \
    help="files to be searched")
parser.add_argument("-t", "--type", nargs="*", \
    help="type of data to be carved")
parser.add_argument("--list-types", action="store_const", \
    const="list_types", help="list supported data types")
parser.add_argument("--version", "-V", action="version", \
    version=carver_lib.version, help="print version information")

args = parser.parse_args()

if len(sys.argv) == 1:
    parser.print_help()
    exit()

# List supported types
if args.list_types:
    types = carver_lib.getSupportedTypes()
    print "Supported types:",
    print types
    exit()

for f in args.files:
    print "Searching %s using %s plugin." % (f, args.type) 
    plugin = carver.getPlugin(args.type)
    if plugin == None:
        print "Unsupported plugin: %s" % args.type
        exit()
    (headers, records) = plugin.searchFile(f)
    for r in records:
        r.printRecord()

